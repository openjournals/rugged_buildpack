#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

VENDOR_DIR="$BUILD_DIR/vendor"
BUILD_CACHE_DIR="$CACHE_DIR/vendor"
EXPORT_SCRIPT="$PWD/export"
PROFILE_DIR="$BUILD_DIR/.profile.d"
PROFILE_SCRIPT="$PROFILE_DIR/omniref.sh"

mkdir -p $PROFILE_DIR
mkdir -p $VENDOR_DIR
mkdir -p $BUILD_CACHE_DIR

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function set-default-env (){
    # profile.d script is used by heroku to set up initial env
    echo "export $1=\$$1:$HOME/$2" >> $PROFILE_SCRIPT
    # export script is for buildpack-multi support
    echo "export $1=\$$1:$BUILD_DIR/$2" >> $EXPORT_SCRIPT
}

# install CMake from cache, or from binary build download
if [ -d "$BUILD_CACHE_DIR/cmake" ]; then
    topic "copying cached cmake build."
    cp -R "$BUILD_CACHE_DIR/cmake/"{bin,share} $VENDOR_DIR
fi

if [ ! -x "$VENDOR_DIR/bin/cmake" ]; then
    topic "no cmake build found. Installing binary cmake v3.2.3 from cmake.org."
    curl 'http://cmake.org/files/v3.2/cmake-3.2.3-Linux-x86_64.tar.gz' -s -o - | tar -xz -C "$BUILD_CACHE_DIR"
    mv "$BUILD_CACHE_DIR/cmake-3.2.3-Linux-x86_64" "$BUILD_CACHE_DIR/cmake"
    cp -R "$BUILD_CACHE_DIR/cmake/"{bin,share} $VENDOR_DIR
fi

# install libicu from cache, or from source build
if [ -d "$BUILD_CACHE_DIR/icu" ]; then
    topic "copying cached icu build."
    cp -R "$BUILD_CACHE_DIR/icu/"{bin,lib,include} $VENDOR_DIR
fi

if [ ! -x "$VENDOR_DIR/bin/uconv" ]; then
    topic "no icu build found. Downoading source."
    curl 'http://ftp.oregonstate.edu/.1/blfs/conglomeration/icu/icu4c-55_1-src.tgz' -s -o - | tar -xz -C "$BUILD_DIR"
    cd "$BUILD_DIR/icu/source"

    topic "building libicu from source."
    ./configure --prefix="$BUILD_CACHE_DIR/icu"
    make
    make install
    
    cp -R "$BUILD_CACHE_DIR/icu/"{bin,lib,include} $VENDOR_DIR
fi

set-default-env PATH "vendor/bin"
set-default-env LIBRARY_PATH "vendor/lib"
set-default-env LD_LIBRARY_PATH "vendor/lib"
set-default-env INCLUDE_PATH "vendor/include"
set-default-env CPATH "vendor/include"
set-default-env CPPPATH "vendor/include"
